version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=${DATABASE_URL}
        - DATABASE_URL_UNPOOLED=${DATABASE_URL_UNPOOLED}
    container_name: historian-app
    restart: unless-stopped
    env_file:
      - .env.production
    volumes:
      - ./logs/production:/app/logs
    depends_on:
      - redis
    networks:
      - historian-network

  # Strapi CMS
  strapi:
    image: strapi/strapi:v4.20.6
    container_name: historian-strapi
    restart: unless-stopped
    env_file:
      - .env.production
    volumes:
      - ./logs/strapi:/opt/app/logs
      - ./uploads:/opt/app/public/uploads
    networks:
      - historian-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: historian-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env.production
    volumes:
      - redis_data:/data
    networks:
      - historian-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: historian-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
      - ./ssl:/etc/nginx/ssl
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
      - strapi
    networks:
      - historian-network

  # Certbot for SSL
  certbot:
    image: certbot/certbot
    container_name: historian-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN} --staging
    networks:
      - historian-network

volumes:
  redis_data:

networks:
  historian-network:
    driver: bridge 