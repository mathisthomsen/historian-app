version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=${DATABASE_URL}
        - DATABASE_URL_UNPOOLED=${DATABASE_URL_UNPOOLED}
    container_name: historian-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_URL_UNPOOLED=${DATABASE_URL_UNPOOLED}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - WORKOS_API_KEY=${WORKOS_API_KEY}
      - WORKOS_CLIENT_ID=${WORKOS_CLIENT_ID}
      - WORKOS_REDIRECT_URI=${WORKOS_REDIRECT_URI}
      - WORKOS_COOKIE_PASSWORD=${WORKOS_COOKIE_PASSWORD}
      - AUTHKIT_REDIRECT_URI=${AUTHKIT_REDIRECT_URI}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./logs/production:/app/logs
    depends_on:
      - redis
    networks:
      - historian-network

  # Strapi CMS
  strapi:
    image: strapi/strapi:latest
    container_name: historian-strapi
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_CLIENT=postgres
      - DATABASE_HOST=${STRAPI_DB_HOST}
      - DATABASE_PORT=5432
      - DATABASE_NAME=${STRAPI_DB_NAME}
      - DATABASE_USERNAME=${STRAPI_DB_USER}
      - DATABASE_PASSWORD=${STRAPI_DB_PASSWORD}
      - DATABASE_SSL=true
      - JWT_SECRET=${STRAPI_JWT_SECRET}
      - ADMIN_JWT_SECRET=${STRAPI_ADMIN_JWT_SECRET}
      - APP_KEYS=${STRAPI_APP_KEYS}
      - API_TOKEN_SALT=${STRAPI_API_TOKEN_SALT}
      - TRANSFER_TOKEN_SALT=${STRAPI_TRANSFER_TOKEN_SALT}
    volumes:
      - ./logs/strapi:/opt/app/logs
      - ./uploads:/opt/app/public/uploads
    networks:
      - historian-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: historian-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - historian-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: historian-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
      - ./ssl:/etc/nginx/ssl
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
      - strapi
    networks:
      - historian-network

  # Certbot for SSL
  certbot:
    image: certbot/certbot
    container_name: historian-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN} --staging
    networks:
      - historian-network

volumes:
  redis_data:

networks:
  historian-network:
    driver: bridge 