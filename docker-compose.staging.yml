version: '3.8'

services:
  # MySQL Database for Staging
  mysql:
    image: mysql:8.0
    container_name: historian_mysql_staging
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_staging_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"  # Different port for staging
    networks:
      - historian_staging_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Next.js Application for Staging
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: staging
    container_name: historian_app_staging
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - WORKOS_API_KEY=${WORKOS_API_KEY}
      - WORKOS_CLIENT_ID=${WORKOS_CLIENT_ID}
      - WORKOS_REDIRECT_URI=${WORKOS_REDIRECT_URI}
      - WORKOS_COOKIE_PASSWORD=${WORKOS_COOKIE_PASSWORD}
      - AUTHKIT_REDIRECT_URI=${AUTHKIT_REDIRECT_URI}
    ports:
      - "3001:3000"  # Different port for staging
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - historian_staging_network
    volumes:
      - ./uploads/staging:/app/uploads
      - ./logs/staging:/app/logs

volumes:
  mysql_staging_data:

networks:
  historian_staging_network:
    driver: bridge 