version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=${DATABASE_URL}
        - DATABASE_URL_UNPOOLED=${DATABASE_URL_UNPOOLED}
    container_name: historian_app_staging
    restart: unless-stopped
    env_file:
      - .env.staging
    ports:
      - "3001:3000"
    depends_on:
      - redis
      - strapi
    networks:
      - historian_staging_network
    volumes:
      - ./logs/staging:/app/logs

  strapi:
    image: strapi/strapi:5.18.0
    container_name: historian_strapi_staging
    restart: unless-stopped
    env_file:
      - .env.staging
    environment:
      - NODE_ENV=staging
      - DATABASE_CLIENT=postgres
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_SSL=true
      - PGSSLMODE=require
    ports:
      - "1338:1337"
    depends_on:
      - redis
    networks:
      - historian_staging_network
    volumes:
      - ./logs/staging:/opt/app/logs
      - ./uploads/staging:/opt/app/public/uploads

  redis:
    image: redis:7-alpine
    container_name: historian-redis-staging
    restart: unless-stopped
    env_file:
      - .env.staging
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_staging_data:/data
    networks:
      - historian_staging_network

  nginx:
    image: nginx:alpine
    container_name: historian_nginx_staging
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
      - ./ssl:/etc/nginx/ssl
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
      - strapi
    networks:
      - historian_staging_network

  certbot:
    image: certbot/certbot
    container_name: historian-certbot-staging
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email $SSL_EMAIL --agree-tos --no-eff-email -d $DOMAIN --staging
    networks:
      - historian_staging_network

volumes:
  redis_staging_data:

networks:
  historian_staging_network:
    driver: bridge 