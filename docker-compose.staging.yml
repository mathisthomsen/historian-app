version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=${DATABASE_URL}
        - DATABASE_URL_UNPOOLED=${DATABASE_URL_UNPOOLED}
    container_name: historian_app_staging
    restart: unless-stopped
    env_file:
      - .env.staging
    ports:
      - "3001:3000"
    depends_on:
      - redis
      - strapi
    networks:
      - historian_staging_network
    volumes:
      - ./logs/staging:/app/logs

  strapi:
    build:
      context: ./strapi
      dockerfile: Dockerfile
    container_name: historian_strapi_staging
    restart: unless-stopped
    env_file:
      - .env.staging
    environment:
      - DATABASE_CLIENT=postgres
      - DATABASE_URL=
      - DATABASE_SSL=true
      - PGSSLMODE=require
    volumes:
      - ./logs/strapi:/opt/app/logs
      - ./uploads:/opt/app/public/uploads
    networks:
      - historian_staging_network

  redis:
    image: redis:7-alpine
    container_name: historian-redis-staging
    restart: unless-stopped
    env_file:
      - .env.staging
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_staging_data:/data
    networks:
      - historian_staging_network

  nginx:
    image: nginx:alpine
    container_name: historian_nginx_staging
    restart: unless-stopped
    # No ports exposed to host; only internal networking
    volumes:
      - ./nginx/nginx.staging.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
      - strapi
    networks:
      - historian_staging_network

volumes:
  redis_staging_data:

networks:
  historian_staging_network:
    driver: bridge 