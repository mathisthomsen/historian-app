version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: historian_app
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - WORKOS_API_KEY=${WORKOS_API_KEY}
      - WORKOS_CLIENT_ID=${WORKOS_CLIENT_ID}
      - WORKOS_REDIRECT_URI=${WORKOS_REDIRECT_URI}
      - WORKOS_COOKIE_PASSWORD=${WORKOS_COOKIE_PASSWORD}
      - AUTHKIT_REDIRECT_URI=${AUTHKIT_REDIRECT_URI}
    ports:
      - "3000:3000"
    depends_on:
      - strapi
    networks:
      - historian_network
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: historian_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - historian_network
    profiles:
      - production

  strapi:
    image: strapi/strapi
    platform: linux/amd64
    container_name: strapi
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: ${STRAPI_DB_HOST}
      DATABASE_PORT: 5432
      DATABASE_NAME: ${STRAPI_DB_NAME}
      DATABASE_USERNAME: ${STRAPI_DB_USER}
      DATABASE_PASSWORD: ${STRAPI_DB_PASSWORD}
      DATABASE_SSL: 'true'
      JWT_SECRET: ${STRAPI_JWT_SECRET}
      ADMIN_JWT_SECRET: ${STRAPI_ADMIN_JWT_SECRET}
      APP_KEYS: ${STRAPI_APP_KEYS}
      API_TOKEN_SALT: ${STRAPI_API_TOKEN_SALT}
    ports:
      - "1337:1337"
    volumes:
      - ./strapi:/srv/app
    networks:
      - historian_network

networks:
  historian_network:
    driver: bridge 